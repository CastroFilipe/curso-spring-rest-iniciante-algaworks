<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.filipe.osworks</groupId>
	<artifactId>osworks-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>osworks-api</name>
	<description>Api de ordens de serviços.</description>

	<properties>
		<!-- propriedade que indica a versão do java. O valor poderá ser referenciado com ${java.version} -->
		<java.version>1.8</java.version>
		<!-- Propriedade informando ao maven que utilize utf-8 para o build e outras configurações. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Permite que a api retorne os dados no formato xml caso o cliente solicite. 
			A solicitação do formato xml ao invés do padrão json é feita no cabeçalho 
			da requisição com o chave/atributo Accept = application/xml. -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!--Controle de versão e migração de banco de dados(verificar aquivos de scripts no diretório padrão
		 resources/db/migration). Os scripts são executados apenas uma vez e as informações de execução serão salvas
		 em tabela, com nome padrão flyway_schema_history, gerada automaticamente na base de dados configurada.-->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<!-- Classe ModelMapper faz o mapeamento e conversão automática de entidades(Persistence model) 
		para DTOs(Representation Model) e vice-versa. -->
		<dependency>
		    <groupId>org.modelmapper</groupId>
		    <artifactId>modelmapper</artifactId>
		    <version>2.3.6</version>
		</dependency>
	</dependencies>

	<build>
	<!-- O nome do arquivo de build final será o mesmo do nome do projeto -->
		<finalName>${project.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- Plugin de compilação. Informa ao maven para compilar na versão 1.8 do java -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
